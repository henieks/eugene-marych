{"mappings":"ACAA,SAAS,iBAAiB,mBAAoB,AAAC,IAC5C,IAAM,EAAY,SAAS,eAAe,yBACpC,EAAS,EAAU,uBAAuB,gBAEhD,SAAS,EAAU,CAAK,EACrB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,OAAQ,IAChC,CAAM,CAAC,EAAE,CAAC,MAAM,QAAU,IAAM,EAAQ,QAAU,MAExD,CAEA,EAAU,iBAAiB,YAAa,AAAC,IACtC,IAAM,EAAiB,EAAU,YAC3B,EAAS,EAAE,QAAU,EAAU,wBAAwB,KAG7D,GAAI,GAAU,GAAK,GAAU,EAAgB,CAC1C,IAAM,EAAe,EAAiB,EAAO,OAE7C,EADc,KAAK,MAAM,EAAS,GAErC,CACH,GAEA,EAAU,iBAAiB,aAAc,AAAC,IAEvC,EAAU,EACb,GAGA,EAAU,EACb","sources":["<anon>","js/ridivisa.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", (event)=>{\n    const container = document.getElementById(\"ridivisa-img__wrapper\");\n    const images = container.getElementsByClassName(\"ridivisa-img\");\n    function showImage(index) {\n        for(let i = 0; i < images.length; i++)images[i].style.display = i === index ? \"block\" : \"none\";\n    }\n    container.addEventListener(\"mousemove\", (e)=>{\n        const containerWidth = container.offsetWidth;\n        const mouseX = e.clientX - container.getBoundingClientRect().left;\n        // Ensure mouseX is within the container bounds\n        if (mouseX >= 0 && mouseX <= containerWidth) {\n            const sectionWidth = containerWidth / images.length;\n            const index = Math.floor(mouseX / sectionWidth);\n            showImage(index);\n        }\n    });\n    container.addEventListener(\"mouseleave\", (e)=>{\n        // Optionally, show the first or last image when the mouse leaves the container\n        showImage(1);\n    });\n    // Initial display\n    showImage(1);\n});\n\n//# sourceMappingURL=index.41a135ed.js.map\n","document.addEventListener('DOMContentLoaded', (event) => {\n   const container = document.getElementById('ridivisa-img__wrapper');\n   const images = container.getElementsByClassName('ridivisa-img');\n\n   function showImage(index) {\n      for (let i = 0; i < images.length; i++) {\n         images[i].style.display = i === index ? 'block' : 'none';\n      }\n   }\n\n   container.addEventListener('mousemove', (e) => {\n      const containerWidth = container.offsetWidth;\n      const mouseX = e.clientX - container.getBoundingClientRect().left;\n\n      // Ensure mouseX is within the container bounds\n      if (mouseX >= 0 && mouseX <= containerWidth) {\n         const sectionWidth = containerWidth / images.length;\n         const index = Math.floor(mouseX / sectionWidth);\n         showImage(index);\n      }\n   });\n\n   container.addEventListener('mouseleave', (e) => {\n      // Optionally, show the first or last image when the mouse leaves the container\n      showImage(1);\n   });\n\n   // Initial display\n   showImage(1);\n});\n"],"names":["document","addEventListener","event","container","getElementById","images","getElementsByClassName","showImage","index","i","length","style","display","e","containerWidth","offsetWidth","mouseX","clientX","getBoundingClientRect","left","sectionWidth","Math","floor"],"version":3,"file":"index.41a135ed.js.map"}